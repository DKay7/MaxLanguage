//OPERATION (KWORD, EVAL_FUNCTION, ...)

OPERATION (SUB,           Eval (left) - Eval (right),               {})
OPERATION (ADD,           Eval (left) + Eval (right),               {})
OPERATION (MUL,           Eval (left) * Eval (right),               SpecialValue {.validEdge = (Tree::TreeEdge) ((int) Tree::LEFT_CHILD | (int) Tree::RIGHT_CHILD), .validValue = 0, .result = 0})
OPERATION (DIV,           Eval (left) / Eval (right),               SpecialValue {.validEdge = Tree::LEFT_CHILD,                                                    .validValue = 0, .result = 0})
OPERATION (SIN,           sin (Eval (right)),                       {})
OPERATION (COS,           cos (Eval (right)),                       {})
OPERATION (FLOOR,         (double) ((long long) Eval (right)),      {})
OPERATION (NOT,           (double) (!Eval (right)),                 {})
OPERATION (EQUAL,         (double) (Eval (left) == Eval(right)),    {})
OPERATION (LESS,          (double) (Eval (left) < Eval (right)),    {})
OPERATION (GREATER,       (double) (Eval (left) > Eval (right)),    {})
OPERATION (LESS_EQUAL,    (double) (Eval (left) <= Eval (right)),   {})
OPERATION (GREATER_EQUAL, (double) (Eval (left) >= Eval (right)),   {})
OPERATION (NOT_EQUAL,     (double) (Eval (left) != Eval (right)),   {})
OPERATION (AND,           (double) (Eval (left) && Eval (right)),   SpecialValue {.validEdge = (Tree::TreeEdge) ((int) Tree::LEFT_CHILD | (int) Tree::RIGHT_CHILD), .validValue = 0, .result = 0})
OPERATION (OR,            (double) (Eval (left) || Eval (right)),   SpecialValue {.validEdge = (Tree::TreeEdge) ((int) Tree::LEFT_CHILD | (int) Tree::RIGHT_CHILD), .validValue = 1, .result = 1})
